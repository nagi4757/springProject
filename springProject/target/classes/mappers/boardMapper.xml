<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<!-- 게시글 전체 목록 조회 -->
	<select id="listAll" resultType="com.ybh.springProject.model.dto.BoardVO">
		<!-- 목록 조회 및 페이징 전체 쿼리 -->
		<include refid="pagingHeader"></include>
		SELECT
			bno, 
			title, 
			content, 
            writer,
            b.regdate, 
            viewcnt,
            user_name AS userName,
            <!-- 댓글숫자표시 -->
            (SELECT COUNT(*) FROM tbl_reply WHERE bno=b.bno) AS recnt
		FROM 
            tbl_board b, 
            tbl_member m
        <!-- WHERE절을 include 태그로 삽입 -->
        <include refid="search"></include>
        ORDER BY 
            bno desc, 
            regdate desc
        <include refid="pagingFooter"></include>  
	</select>
	
	<!-- 강의 게시글 전체 목록 조회 -->
	<select id="lectureListAll" resultType="com.ybh.springProject.model.dto.BoardVO">
		<include refid="pagingHeader"></include>
		SELECT
			bno, 
			title, 
			content, 
            writer,
            b.regdate, 
            viewcnt,
            user_name AS userName,
            <!-- 댓글숫자표시 -->
            (SELECT COUNT(*) FROM tbl_reply WHERE bno=b.bno) AS recnt
		FROM 
            tbl_board b, 
            tbl_member m
        WHERE
        	b.bgroup = #{bgroup}
        ORDER BY 
            bno desc, 
            regdate desc
		<include refid="pagingFooter"></include>  
	</select>
	
	<!-- 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*) FROM tbl_board b, 
							 tbl_member m
		<!-- WHERE절 include 태그로 삽입 -->
		<include refid="search"></include>
	</select>
	
	<!-- 강의 게시글 레코드 갯수 -->
	<select id="lectureCountArticle" resultType="int">
		SELECT COUNT(*) FROM tbl_board b 
		WHERE b.bgroup = #{bgroup}
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="insert">
		INSERT INTO tbl_board (
			bno,
			bgroup, 
          	title, 
          	content, 
          	writer
		) VALUES (
			NULL,
			#{bgroup},
			#{title},
          	#{content},
          	#{writer}
		)
	</insert>
	
	<!-- 게시글 상세보기 조회 -->
    <select id="view" resultType="com.ybh.springProject.model.dto.BoardVO">
        SELECT
        	bno,
        	title,
        	content,
        	writer,
        	b.regdate,
        	viewCnt,
        	user_name AS userName 
        FROM tbl_board b, tbl_member m
        WHERE bno = #{bno} AND writer = user_id 
    </select>
    
	<!-- 게시글 조회수 증가처리 -->
	<select id="increaseViewcnt" resultType="com.ybh.springProject.model.dto.BoardVO">
		UPDATE tbl_board 
		SET 
			viewcnt = viewcnt + 1
		WHERE bno = #{bno}	 
	</select>
	
	<!-- 게시글 수정처리 -->
	<update id="updateArticle">
		UPDATE tbl_board 
		SET 
			title = #{title},
            content = #{content}
		WHERE bno = #{bno}
	</update>
	
	<!-- 게시글 삭제처리 -->
	<delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>
    
    <!-- sql code 조각 -->
    <!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
    <sql id="search">
    	<choose>
    		<!-- 검색옵션이 전체 검색일 경우 -->
    		<when test="searchOption == 'all'">
    			WHERE b.writer = m.user_id 
    			AND b.bgroup = #{bgroup} 
    			AND (
    				user_name like CONCAT('%',#{keyword},'%')
            		OR content like CONCAT('%',#{keyword},'%')
            		OR title like CONCAT('%',#{keyword},'%')
    			)
    		</when>
    		<!-- 전체 검색이 아닐 경우 -->
    		<otherwise>
    			WHERE b.writer = m.user_id 
    			AND b.bgroup = #{bgroup}  
    			AND ${searchOption} like CONCAT('%',#{keyword},'%')
    		</otherwise>
    	</choose>
    </sql>
    
    <!-- 페이징 sql -->
    <sql id="pagingHeader">
    	SELECT * FROM(
    		SELECT @ROWNUM:=@ROWNUM+1 AS ROWNUM, A.* FROM(
    </sql>
    
    <sql id="pagingFooter">
    		) A, (SELECT @ROWNUM:=0) tmp
		) B WHERE ROWNUM BETWEEN #{start} AND #{end};
    </sql>
    
</mapper>